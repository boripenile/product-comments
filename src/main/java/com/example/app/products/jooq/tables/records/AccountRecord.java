/*
 * This file is generated by jOOQ.
*/
package com.example.app.products.jooq.tables.records;


import com.example.app.products.jooq.tables.Account;
import com.example.app.products.jooq.tables.interfaces.IAccount;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements VertxPojo, Record5<Long, Timestamp, String, String, String>, IAccount {

    private static final long serialVersionUID = -215444417;

    /**
     * Setter for <code>products_download.account.id</code>.
     */
    @Override
    public AccountRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>products_download.account.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>products_download.account.created</code>.
     */
    @Override
    public AccountRecord setCreated(Timestamp value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>products_download.account.created</code>.
     */
    @Override
    public Timestamp getCreated() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>products_download.account.email</code>.
     */
    @Override
    public AccountRecord setEmail(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>products_download.account.email</code>.
     */
    @Override
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>products_download.account.password</code>.
     */
    @Override
    public AccountRecord setPassword(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>products_download.account.password</code>.
     */
    @Override
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>products_download.account.role</code>.
     */
    @Override
    public AccountRecord setRole(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>products_download.account.role</code>.
     */
    @Override
    public String getRole() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Timestamp, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Timestamp, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Account.ACCOUNT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Account.ACCOUNT.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Account.ACCOUNT.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Account.ACCOUNT.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Account.ACCOUNT.ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value2(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value3(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value4(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value5(String value) {
        setRole(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord values(Long value1, Timestamp value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IAccount from) {
        setId(from.getId());
        setCreated(from.getCreated());
        setEmail(from.getEmail());
        setPassword(from.getPassword());
        setRole(from.getRole());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IAccount> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(Long id, Timestamp created, String email, String password, String role) {
        super(Account.ACCOUNT);

        set(0, id);
        set(1, created);
        set(2, email);
        set(3, password);
        set(4, role);
    }

    public AccountRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
